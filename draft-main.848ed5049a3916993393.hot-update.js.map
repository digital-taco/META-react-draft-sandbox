{"version":3,"sources":["webpack:///../react-draft/src/components/Draft.js"],"names":["frameCss","babelStandalone","document","createElement","setAttribute","head","appendChild","componentTree","Components","Page","iframeRef","useRef","getItem","useContext","StorageContext","SelectedComponent","propStates","SelectedContext","meta","props","tabs","canRenderComponent","canRender","handleMessage","parseMsg","receiveMessage","messageSelectedComponent","msg","current","contentWindow","messagePropStates","type","useEffect","window","addEventListener","removeEventListener","height","contentDocument","body","scrollHeight","length","undefined","process","ReactDOM","render","getElementById"],"mappings":"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","file":"draft-main.848ed5049a3916993393.hot-update.js","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { css } from '@emotion/core'\nimport Components from '../../out/master-exports'\nimport DemoWrapper from './DemoWrapper'\nimport canRender from '../lib/can-render'\nimport SettingsProvider from './Settings/SettingsProvider'\nimport SelectedProvider, { SelectedContext } from './SelectedProvider'\nimport StorageProvider, { StorageContext } from './StorageContext'\nimport { msg, parseMsg } from '../lib/helpers'\n\nconst frameCss = css`\n  width: 100%;\n  height: 100vh;\n  border: none;\n  display: block;\n\n  &[data-tabsopen] {\n    height: calc(100vh - 47px);\n  }\n`\n\nimport '../global.css' //eslint-disable-line\n\n// Add the babel standalone script so we can transpile jsx live\nconst babelStandalone = document.createElement('script')\nbabelStandalone.setAttribute('src', 'https://unpkg.com/@babel/standalone/babel.min.js')\nbabelStandalone.setAttribute('data-presets', 'es2015,react')\ndocument.head.appendChild(babelStandalone)\n\nconst { componentTree } = Components\n\nfunction Page() {\n  const iframeRef = useRef(null)\n  const { getItem } = useContext(StorageContext)\n  const { SelectedComponent, propStates } = useContext(SelectedContext)\n  const { meta } = SelectedComponent\n  const { props } = meta\n\n  const tabs = getItem('DRAFT_tabs', [])\n  const canRenderComponent = propStates && canRender(props, propStates)\n  const handleMessage = parseMsg(receiveMessage)\n\n  const messageSelectedComponent = () =>\n    msg(iframeRef.current && iframeRef.current.contentWindow, 'SELECTED_COMPONENT', meta)\n\n  const messagePropStates = () => msg(iframeRef.current && iframeRef.current.contentWindow, 'PROP_STATES', propStates)\n\n  function receiveMessage(type) {\n    if (type === 'DEMO_INITIALIZED') {\n      messageSelectedComponent()\n      messagePropStates()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage)\n    return () => window.removeEventListener('message', handleMessage)\n  }, [])\n\n  useEffect(() => {\n    messageSelectedComponent(), [SelectedComponent]\n  })\n\n  useEffect(() => {\n    messagePropStates(), [propStates]\n  })\n\n  return (\n    <DemoWrapper propObjects={props} componentTree={componentTree}>\n      {canRenderComponent && (\n        <iframe\n          ref={iframeRef}\n          css={frameCss}\n          onLoad={() => {\n            iframeRef.current.height = `${iframeRef.current.contentDocument.body.scrollHeight}px`\n          }}\n          data-tabsopen={tabs.length > 0 ? '' : undefined}\n          title=\"demo\"\n          src={`${process.env.PUBLIC_PATH || '/'}demo`}\n        />\n      )}\n    </DemoWrapper>\n  )\n}\n\n// Render the demo in the dom\nReactDOM.render(\n  <StorageProvider>\n    <SelectedProvider components={Components}>\n      <SettingsProvider>\n        <Page />\n      </SettingsProvider>\n    </SelectedProvider>\n  </StorageProvider>,\n  document.getElementById('app')\n)"],"sourceRoot":""}